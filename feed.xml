<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://anikiz.github.io/</id><title>AnikiZ</title><subtitle>Zeping Zhu</subtitle> <updated>2022-11-10T03:49:26+00:00</updated> <author> <name>Zeping Zhu</name> <uri>https://anikiz.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://anikiz.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://anikiz.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Zeping Zhu </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Distributed Systems Notes</title><link href="https://anikiz.github.io/posts/LearnDistributedSystems/" rel="alternate" type="text/html" title="Distributed Systems Notes" /><published>2022-10-09T22:28:00+00:00</published> <updated>2022-10-19T05:52:17+00:00</updated> <id>https://anikiz.github.io/posts/LearnDistributedSystems/</id> <content src="https://anikiz.github.io/posts/LearnDistributedSystems/" /> <author> <name>Zeping Zhu</name> </author> <category term="Courses" /> <category term="Distributed System" /> <summary> 1. RPC and Multi-Threads reason for multi-threads: I/O concurrency Parallelism(multiple cores, true parallelism, multiple cpu cycles per second) Convenience(fire something every some seconds in loop waiting for separate work; notice to exit every routine gracefully! otherwise accumulating in background!) what if not use multi-threads while still enabling multiple servers to communicate... </summary> </entry> <entry><title>Distributed System__Instant messaging system mode</title><link href="https://anikiz.github.io/posts/GoMessagingSystem/" rel="alternate" type="text/html" title="Distributed System__Instant messaging system mode" /><published>2022-09-12T19:39:00+00:00</published> <updated>2022-09-12T19:39:00+00:00</updated> <id>https://anikiz.github.io/posts/GoMessagingSystem/</id> <content src="https://anikiz.github.io/posts/GoMessagingSystem/" /> <author> <name>Zeping Zhu</name> </author> <category term="Courses" /> <category term="Distributed System" /> <summary> Demo1: Instant messaging system - Server reference 1. Construct basic Server server.go, contains following; Server Struct, containing Ip, Port NewServer(ip String, port int) method to create server object (s *Server) Start() Start Server method (s *Server) Handler(conn net.Conn) handle connection package main import ( "fmt" "net" ) type Server struct { Ip string P... </summary> </entry> <entry><title>Distributed System__Java Web Programming Practice</title><link href="https://anikiz.github.io/posts/JavaWeb/" rel="alternate" type="text/html" title="Distributed System__Java Web Programming Practice" /><published>2022-09-11T03:39:00+00:00</published> <updated>2022-09-11T03:39:00+00:00</updated> <id>https://anikiz.github.io/posts/JavaWeb/</id> <content src="https://anikiz.github.io/posts/JavaWeb/" /> <author> <name>Zeping Zhu</name> </author> <category term="Courses" /> <category term="Distributed System" /> <summary> Port(PID) netstat -ano #查看所有端口 netstat -ano|findstr "6732" #查看指定端口 tasklist|findstr "6732" #查看指定进程 # 使用任务管理器查看PID 端口号与IP地址的组合，得出一个网络套接字:Socket，所以说一些网络编程也被称为Socket编程 import java.net.InetSocketAddress; public class InetSocketAddressTest { public static void main(String[] args) { InetSocketAddress socketAddress = new InetSocketAddress("127.0.0.1",8080); InetSocketAddress sock... </summary> </entry> <entry><title>Foundations of Blockchains_18635 Note</title><link href="https://anikiz.github.io/posts/SmallGame/" rel="alternate" type="text/html" title="Foundations of Blockchains_18635 Note" /><published>2022-08-31T02:30:00+00:00</published> <updated>2022-08-31T02:30:00+00:00</updated> <id>https://anikiz.github.io/posts/SmallGame/</id> <content src="https://anikiz.github.io/posts/SmallGame/" /> <author> <name>Zeping Zhu</name> </author> <category term="Courses" /> <category term="Foundations of Blockchains_18635" /> <summary> An interesting card love dating game: Target: Alice and Bob, if both love each other, dating; otherwise, not dating Prerequisite: honest-but-curious, can’t be ‘malicious’ Method 1: ❤️: love ♣️: not love Step 1: Alice went into the room, puts card face-down on table, ❤️ if love, ♣️ if no love Step 2: Alice leaves the room, Bob went into the room, if he loves Alice, open the card and get the ... </summary> </entry> <entry><title>Markdown+Typora学习笔记</title><link href="https://anikiz.github.io/posts/typora/" rel="alternate" type="text/html" title="Markdown+Typora学习笔记" /><published>2022-08-26T04:15:00+00:00</published> <updated>2022-08-26T04:28:51+00:00</updated> <id>https://anikiz.github.io/posts/typora/</id> <content src="https://anikiz.github.io/posts/typora/" /> <author> <name>Zeping Zhu</name> </author> <category term="Tools Manual" /> <summary> [TOC] [Markdown+Typora/VSCode Manual] 来源:Markdown-Typora-VSCode-Doc 😂 简要介绍 Markdown 是一种轻量型标记语言, 是一种语法. 以 .md 结尾的文本文件就是 Markdown 文件. 相较于 Word, 它更加像是 HTML 语言或是 $\LaTeX$, 并不是最淳朴的那种”所见即所得”. 它处处透露着一种极简主义. 高效简洁清晰的同时, 又很简单. 看起来舒服, 语法简单, 尤其在处理纯文本上有很大的优势. 它相较于 Word, 兼容性非常高, 可以跨平台使用, 不用担心奇奇怪怪的版本兼容问题. 同时, 有许多网站都支持或正在使用 Markdown 语法. 如 Github (等一系列代码托管平台), StackOverflow(等答疑平台), 简书, 语雀 (等一系列笔记平台). 📐 实际... </summary> </entry> </feed>
